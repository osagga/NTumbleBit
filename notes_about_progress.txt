For the Transactions:

Alice:
	T_escr [DONE]:
		- Just needs a modification to the amount that is passed into it, I just need to figure out how would that be passed.
			- See ClientChannelNegotiation.BuildClientEscrowTxOut()
	T_refund (from T_escr) [DONE]:
		- Doesn't need modification, it just assumes that you would need all the amount of BTCs that T_escr was initlized to.
			- We don't need to worry about the change here, that's why this is is the same
				- See SolverClientSession.CreateRedeemTransaction(feeRate)
	T_puzzle:

	T_solve:

	T_cash:


Parameters:
	Alice -> AliceRequestedPaymentsCount:
		- This is the total numbers of payments Alice want to make with the Tumbler (Alice can do upto this limit)
	
	Alice -> CurrentPuzzleNum:
		- This reflect the puzzle that Alice and the Tumbler are currently trying to solve (this number should be limited (<=) by AliceRequestedPaymentsCount.

	
Some Problems:
	- Bob blinds the Voucher (at ClientChannelNegotiation.ReceiveUnsignedVoucher(voucherResponse);), but Alice is the one that unblinds it (at ClientChannelNegotiation.CheckVoucherSolution(voucher);), Alice shouldn't be able to do that (have acess to the blinding factor)
		- It's better if Alice blinded the voucher before sending it to the Tumbler, and unblinds it herself and send it to Bob
	- Who should pay the transaction fees on the transaction that gives Bob 'i' and the Tumbler 'Q-i'? For now I'm assuming that Bob should pay it.


Questions:
	- Should the Tumbler fee be higher (linked to the requested payment number)?
	- Should there be an upper limit to the amount of payments Bob requests?
	- Should the payment phase be longer, if so, how much longer?
		- First you need to confirm that all of the Alice's stuff is going to be done in the PaymentPhase
